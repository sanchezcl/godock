version: '3'

networks:
  backend:
    driver: ${NETWORKS_DRIVER}

volumes:
  mysql:
    driver: ${VOLUMES_DRIVER}
  postgres:
    driver: ${VOLUMES_DRIVER}
  redis:
    driver: ${VOLUMES_DRIVER}
  mongo:
    driver: ${VOLUMES_DRIVER}

services:
  ### golang ################################################
  golang:
    build:
      context: ./golang
      args:
        - INSTALL_OCI8=${GOLANG_INSTALL_OCI8}
        - GO_VERSION=${GOLANG_GO_VERSION}
        - INSTALL_GO_AIR=${GOLANG_INSTALL_GO_AIR}
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      - ${APP_GOPATH}:/golib${APP_CODE_CONTAINER_FLAG}
    ports:
      - 8081:8081
    networks:
      - backend

  ### MySQL ################################################
  mysql:
    build:
      context: ./mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${TIMEZONE}
    volumes:
      - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
      - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - backend

    ### PostgreSQL ###########################################
  postgres:
    build:
      context: ./postgres
      args:
        - POSTGRES_VERSION=${POSTGRES_VERSION}
    volumes:
      - ${DATA_PATH_HOST}/postgres:/var/lib/postgresql/data
      - ${POSTGRES_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - backend

  ### Redis ################################################
  redis:
    build: ./redis
    volumes:
      - ${DATA_PATH_HOST}/redis:/data
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - backend

  ### REDISWEBUI ################################################
  redis-webui:
    build:
      context: ./redis-webui
    environment:
      - ADMIN_USER=${REDIS_WEBUI_USERNAME}
      - ADMIN_PASS=${REDIS_WEBUI_PASSWORD}
      - REDIS_1_HOST=${REDIS_WEBUI_CONNECT_HOST}
      - REDIS_1_PORT=${REDIS_WEBUI_CONNECT_PORT}
    networks:
      - backend
    ports:
      - "${REDIS_WEBUI_PORT}:80"
    depends_on:
      - redis

  ### MongoDB ##############################################
  mongo:
    build: ./mongo
    ports:
      - "${MONGODB_PORT}:27017"
    volumes:
      - ${DATA_PATH_HOST}/mongo:/data/db
      - ${DATA_PATH_HOST}/mongo_config:/data/configdb
    networks:
      - backend

  ### MongoWebUI ################################################
  mongo-webui:
    build:
      context: ./mongo-webui
    environment:
      - ROOT_URL=${MONGO_WEBUI_ROOT_URL}
      - MONGO_URL=${MONGO_WEBUI_MONGO_URL}
      - INSTALL_MONGO=${MONGO_WEBUI_INSTALL_MONGO}
    volumes:
      - ${DATA_PATH_HOST}/mongo-webui:/data/db
    ports:
      - "${MONGO_WEBUI_PORT}:3000"
    networks:
      - backend
    depends_on:
      - mongo